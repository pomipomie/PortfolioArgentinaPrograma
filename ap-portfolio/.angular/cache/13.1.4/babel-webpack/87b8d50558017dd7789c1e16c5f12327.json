{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/portfolio.service\";\nimport * as i2 from \"src/app/services/autentication.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction ExpformComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const exp_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", exp_r2.id_exp);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(exp_r2.job);\n  }\n}\n\nfunction ExpformComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const expt_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", expt_r3.id_expt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(expt_r3.jobType);\n  }\n}\n\nexport let ExpformComponent = /*#__PURE__*/(() => {\n  class ExpformComponent {\n    constructor(datosPortfolio, autenticationService, formBuilder) {\n      this.datosPortfolio = datosPortfolio;\n      this.autenticationService = autenticationService;\n      this.formBuilder = formBuilder;\n      this.loggedUser = false; //debe ser false al inicio\n\n      this.openModal = false;\n      this.form = formBuilder.group({\n        id_exp: [[Validators.required]],\n        job: ['', [Validators.required]],\n        workplace: [''],\n        startDate: [''],\n        endDate: [''],\n        description: [''],\n        id_expt: [[Validators.required]]\n      });\n    }\n\n    ngOnInit() {\n      if (this.autenticationService.getUserLogged() != '') {\n        this.loggedUser = true;\n      } else {\n        this.loggedUser = false;\n      }\n\n      this.datosPortfolio.obtenerDatosExp().subscribe(data => {\n        this.exps = data;\n      });\n      this.datosPortfolio.obtenerDatosExpT().subscribe(data => {\n        this.expts = data;\n      });\n    }\n\n    onSave() {\n      if (this.form.valid) {\n        let d = this.form.value;\n        this.datosPortfolio.obtenerExp(d.id_exp).subscribe(data => {\n          this.exp = data;\n          d.id = this.exp.id;\n          this.datosPortfolio.obtenerExpT(d.id_expt).subscribe(dat => {\n            d.id_expt = dat;\n            d.place = this.exp.place;\n\n            if (d.workplace == \"\") {\n              d.workplace = this.exp.workplace;\n            }\n\n            if (d.startDate == \"\") {\n              d.startDate = this.exp.startDate;\n            }\n\n            if (d.endDate == \"\") {\n              d.endDate = this.exp.endDate;\n            }\n\n            if (d.description == \"\") {\n              d.description = this.exp.description;\n            }\n\n            this.datosPortfolio.editExp(d).subscribe(d => {\n              this.exp = d;\n              window.location.reload();\n            });\n          });\n        });\n      } else {\n        alert(\"Formulario inválido\");\n      }\n    }\n\n  }\n\n  ExpformComponent.ɵfac = function ExpformComponent_Factory(t) {\n    return new (t || ExpformComponent)(i0.ɵɵdirectiveInject(i1.PortfolioService), i0.ɵɵdirectiveInject(i2.AutenticationService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  ExpformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExpformComponent,\n    selectors: [[\"app-expform\"]],\n    decls: 38,\n    vars: 3,\n    consts: [[\"id\", \"editexp\", 1, \"modal\"], [\"method\", \"put\", 1, \"modal-content\", \"animate\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"id_exp\"], [\"name\", \"id_exp\", \"formControlName\", \"id_exp\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"job\"], [\"type\", \"text\", \"value\", \"job\", \"formControlName\", \"job\", \"name\", \"job\"], [\"for\", \"workplace\"], [\"type\", \"text\", \"value\", \"workplace\", \"formControlName\", \"workplace\", \"name\", \"workplace\"], [\"for\", \"startDate\"], [\"type\", \"text\", \"value\", \"startDate\", \"formControlName\", \"startDate\", \"name\", \"startDate\"], [\"for\", \"endDate\"], [\"type\", \"text\", \"value\", \"endDate\", \"formControlName\", \"endDate\", \"name\", \"endDate\"], [\"for\", \"description\"], [\"value\", \"description\", \"formControlName\", \"description\", \"name\", \"description\", \"rows\", \"5\"], [\"for\", \"id_expt\"], [\"name\", \"id_expt\", \"formControlName\", \"id_expt\", 3, \"change\"], [\"type\", \"submit\", 1, \"submitbtn\", \"submitexp\"], [\"onclick\", \"window.location.reload()\", \"type\", \"button\", 1, \"submitbtn\", \"notsubmitexp\"], [3, \"value\"]],\n    template: function ExpformComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ExpformComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵelementStart(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Experiencia a editar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 3);\n        i0.ɵɵlistener(\"change\", function ExpformComponent_Template_select_change_4_listener() {\n          return ctx.exp.id_exp;\n        });\n        i0.ɵɵtemplate(5, ExpformComponent_option_5_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Editar trabajo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Editar empresa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Editar fecha de inicio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 10);\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"label\", 11);\n        i0.ɵɵtext(20, \"Editar fecha de salida\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 12);\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Editar descripci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"textarea\", 14);\n        i0.ɵɵtext(26, \"        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelementStart(28, \"label\", 15);\n        i0.ɵɵtext(29, \"Editar tipo de experiencia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"select\", 16);\n        i0.ɵɵlistener(\"change\", function ExpformComponent_Template_select_change_30_listener() {\n          return ctx.exp.id_expt;\n        });\n        i0.ɵɵtemplate(31, ExpformComponent_option_31_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"br\");\n        i0.ɵɵelementStart(33, \"button\", 17);\n        i0.ɵɵtext(34, \"Guardar cambios\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"br\");\n        i0.ɵɵelementStart(36, \"button\", 18);\n        i0.ɵɵtext(37, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.exps);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"ngForOf\", ctx.expts);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor],\n    styles: [\"\"]\n  });\n  return ExpformComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}