{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport let AutenticationService = /*#__PURE__*/(() => {\n  class AutenticationService {\n    constructor(http, cookies) {\n      this.http = http;\n      this.cookies = cookies;\n      this.url = \"https://portfolio-ap-mxb.herokuapp.com/portfolioap/user\";\n      this.currentUserSubject = new BehaviorSubject(JSON.parse(sessionStorage.getItem('currentUser') || '{}'));\n    }\n\n    logIn(user) {\n      return this.http.post(this.url + \"/login\", user).pipe(map(data => {\n        sessionStorage.setItem('currentUser', JSON.stringify(data));\n        return data;\n      }));\n    }\n\n    getUser(id) {\n      return this.http.get(this.url + \"/\" + id + \"/search\");\n    }\n\n    setToken(token) {\n      this.cookies.set(\"token\", token);\n    }\n\n    getToken() {\n      return this.cookies.get(\"token\");\n    }\n\n    deleteToken() {\n      this.cookies.delete(\"token\");\n    }\n\n    logOut() {\n      this.deleteToken();\n      sessionStorage.removeItem('currentUser');\n    }\n\n    getUserLogged() {\n      const token = this.getToken();\n      return token;\n    }\n\n    editUser(user) {\n      return this.http.put(this.url + \"/edit\", user);\n    }\n\n  }\n\n  AutenticationService.ɵfac = function AutenticationService_Factory(t) {\n    return new (t || AutenticationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n  };\n\n  AutenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AutenticationService,\n    factory: AutenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AutenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}