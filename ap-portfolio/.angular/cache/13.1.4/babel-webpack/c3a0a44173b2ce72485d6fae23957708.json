{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/portfolio.service\";\nimport * as i2 from \"src/app/services/autentication.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction NewskiformComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const skillt_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", skillt_r1.id_skillt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(skillt_r1.skilltype);\n  }\n}\n\nexport let NewskiformComponent = /*#__PURE__*/(() => {\n  class NewskiformComponent {\n    constructor(datosPortfolio, autenticationService, formBuilder) {\n      this.datosPortfolio = datosPortfolio;\n      this.autenticationService = autenticationService;\n      this.formBuilder = formBuilder;\n      this.loggedUser = false; //debe ser false al inicio\n\n      this.openModalN = false;\n      this.form = formBuilder.group({\n        skillname: ['', [Validators.required]],\n        skillvalue: ['', [Validators.required]],\n        id_skillt: ['', [Validators.required]]\n      });\n    }\n\n    ngOnInit() {\n      this.datosPortfolio.obtenerDatosSki().subscribe(data => {\n        this.skills = data;\n      });\n      this.datosPortfolio.obtenerDatosSkillT().subscribe(data => {\n        this.skillts = data;\n      });\n\n      if (this.autenticationService.getUserLogged() != '') {\n        this.loggedUser = true;\n      } else {\n        this.loggedUser = false;\n      }\n\n      console.log(\"100%(expert)=629; 90%(advanced)=560; 75%(upper-intermediate)=470; 50%(intermediate)=315; 25%(basic)=160; 5%(newbie)=50\");\n    }\n\n    onSave() {\n      if (this.form.valid) {\n        let d = this.form.value;\n        let thisId;\n        this.datosPortfolio.obtenerDatos().subscribe(data => {\n          thisId = data;\n          d.id = thisId;\n          d.skillfields = [];\n          this.datosPortfolio.obtenerSkillT(d.id_skillt).subscribe(dat => {\n            d.id_skillt = dat;\n            this.datosPortfolio.newSkill(d).subscribe(d => {\n              this.skill = d;\n              window.location.reload();\n            });\n          });\n        });\n      } else {\n        alert(\"Formulario inválido\");\n      }\n    }\n\n  }\n\n  NewskiformComponent.ɵfac = function NewskiformComponent_Factory(t) {\n    return new (t || NewskiformComponent)(i0.ɵɵdirectiveInject(i1.PortfolioService), i0.ɵɵdirectiveInject(i2.AutenticationService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  NewskiformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewskiformComponent,\n    selectors: [[\"app-newskiform\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[\"id\", \"addski\", 1, \"modal\"], [\"method\", \"post\", 1, \"modal-content\", \"animate\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"skillname\"], [\"type\", \"text\", \"value\", \"skillname\", \"formControlName\", \"skillname\", \"name\", \"skillname\"], [\"for\", \"skillvalue\"], [\"type\", \"number\", \"value\", \"skillvalue\", \"formControlName\", \"skillvalue\", \"name\", \"skillvalue\"], [\"for\", \"id_skillt\"], [\"name\", \"id_skillt\", \"formControlName\", \"id_skillt\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"submitbtn\", \"submitexp\"], [\"onclick\", \"window.location.reload()\", \"type\", \"button\", 1, \"submitbtn\", \"notsubmitexp\"], [3, \"value\"]],\n    template: function NewskiformComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function NewskiformComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵelementStart(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Skill\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Valor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Tipo de skill\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 7);\n        i0.ɵɵlistener(\"change\", function NewskiformComponent_Template_select_change_12_listener() {\n          return ctx.skill.id_skillt;\n        });\n        i0.ɵɵtemplate(13, NewskiformComponent_option_13_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"button\", 9);\n        i0.ɵɵtext(16, \"Crear skill\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵtext(19, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.skillts);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i4.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return NewskiformComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}